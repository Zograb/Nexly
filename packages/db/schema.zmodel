// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

generator nestgraphql {
  provider = "node node_modules/prisma-nestjs-graphql"
  output = "../../../apps/api/graphql/models"
  prismaClientImport = "@nexly/db/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

abstract model Base {
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  @@deny('read', deletedAt != null)
}

model User extends Base {
  id              String @id @default(uuid())
  email           String @unique
  preferredName   String?

  notes           Note[]
  folders         Folder[]

  @@allow('read,update', auth().id == id)
}

model Note extends Base {
  id              String @id @default(uuid())
  title           String
  content         String

  userId          String
  user            User   @relation(fields: [userId], references: [id])

  folderId        String
  folder          Folder @relation(fields: [folderId], references: [id])

  @@allow('all', auth().id == userId)

  @@index([userId])
  @@index([folderId])
  @@unique([userId, title])
}

model Folder extends Base {
  id              String @id @default(uuid())
  name            String @unique

  userId          String
  user            User   @relation(fields: [userId], references: [id])

  notes           Note[]

  @@allow('all', auth().id == userId)

  @@index([userId])
  @@unique([userId, name])
}

